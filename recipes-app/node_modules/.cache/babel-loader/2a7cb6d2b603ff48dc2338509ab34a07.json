{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/Bebidas.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\n\nfunction Bebidas(props) {\n  const {\n    history: {\n      location: {\n        pathname\n      }\n    }\n  } = props;\n  const [drinkRecipes, setDrinkRecipes] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const drinkEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const drinkCategoriesEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\n  const newDrinkRecipes = data => {\n    setFoodRecipes(data);\n  };\n\n  const getAllDrinks = () => {\n    fetch(drinkEndpoint).then(res => res.json()).then(({\n      drinks\n    }) => setDrinkRecipes(drinks));\n  };\n\n  useEffect(() => {\n    getAllDrinks();\n    fetch(drinkCategoriesEndpoint).then(res => res.json()).then(({\n      drinks\n    }) => setDrinkCategories(drinks));\n  }, []);\n\n  const handleClick = ({\n    target\n  }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n      fetch(URL).then(res => res.json()).then(({\n        drinks\n      }) => setDrinkRecipes(drinks));\n      allFilters.forEach(filter => {\n        filter.className = '';\n      });\n      target.className = 'clicked';\n    } else {\n      getAllDrinks();\n      target.className = '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    titulo: \"Bebidas\",\n    showProfileIcon: \"sim\",\n    pathname: pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), drinkCategories.map(({\n    strCategory\n  }, index) => {\n    if (index < MAX_CATEGORIES) {\n      return /*#__PURE__*/React.createElement(CategoryButton, {\n        key: strCategory,\n        strCategory: strCategory,\n        handleClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return null;\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"All-category-filter\",\n    type: \"button\",\n    onClick: getAllDrinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"All\"), drinkRecipes.map(({\n    strDrinkThumb,\n    strDrink,\n    idDrink\n  }, index) => {\n    if (index < MAX_RECIPES) {\n      return /*#__PURE__*/React.createElement(Link, {\n        key: strDrink,\n        to: `/bebidas/${idDrink}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(RecipeCard, {\n        key: strDrink,\n        thumb: strDrinkThumb,\n        name: strDrink,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }));\n    }\n\n    return null;\n  }));\n}\n\nBebidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default Bebidas;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/Bebidas.js"],"names":["React","useEffect","useState","Link","PropTypes","CategoryButton","Header","RecipeCard","Bebidas","props","history","location","pathname","drinkRecipes","setDrinkRecipes","drinkCategories","setDrinkCategories","MAX_RECIPES","MAX_CATEGORIES","drinkEndpoint","drinkCategoriesEndpoint","newDrinkRecipes","data","setFoodRecipes","getAllDrinks","fetch","then","res","json","drinks","handleClick","target","className","URL","innerText","allFilters","document","getElementsByName","forEach","filter","map","strCategory","index","strDrinkThumb","strDrink","idDrink","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\n\nfunction Bebidas(props) {\n  const { history: { location: { pathname } } } = props;\n  const [drinkRecipes, setDrinkRecipes] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const drinkEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const drinkCategoriesEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\n  const newDrinkRecipes = (data) => {\n    setFoodRecipes(data);\n  };\n\n  const getAllDrinks = () => {\n    fetch(drinkEndpoint)\n      .then((res) => res.json())\n      .then(({ drinks }) => setDrinkRecipes(drinks));\n  };\n\n  useEffect(() => {\n    getAllDrinks();\n\n    fetch(drinkCategoriesEndpoint)\n      .then((res) => res.json())\n      .then(({ drinks }) => setDrinkCategories(drinks));\n  }, []);\n\n  const handleClick = ({ target }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n\n      fetch(URL)\n        .then((res) => res.json())\n        .then(({ drinks }) => setDrinkRecipes(drinks));\n\n      allFilters.forEach((filter) => { filter.className = ''; });\n\n      target.className = 'clicked';\n    } else {\n      getAllDrinks();\n      target.className = '';\n    }\n  };\n\n  return (\n    <div>\n      <Header titulo=\"Bebidas\" showProfileIcon=\"sim\" pathname={ pathname } />\n      { drinkCategories.map(({ strCategory }, index) => {\n        if (index < MAX_CATEGORIES) {\n          return (\n            <CategoryButton\n              key={ strCategory }\n              strCategory={ strCategory }\n              handleClick={ handleClick }\n            />\n          );\n        }\n        return null;\n      }) }\n      <button\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={ getAllDrinks }\n      >\n        All\n      </button>\n      { drinkRecipes.map(({ strDrinkThumb, strDrink, idDrink }, index) => {\n        if (index < MAX_RECIPES) {\n          return (\n            <Link key={ strDrink } to={ `/bebidas/${idDrink}` }>\n              <RecipeCard\n                key={ strDrink }\n                thumb={ strDrinkThumb }\n                name={ strDrink }\n                index={ index }\n              />\n            </Link>\n          );\n        }\n        return null;\n      }) }\n    </div>\n  );\n}\n\nBebidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Bebidas;\n"]},"metadata":{},"sourceType":"module"}