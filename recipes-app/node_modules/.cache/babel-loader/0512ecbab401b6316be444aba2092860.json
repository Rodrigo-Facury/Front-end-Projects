{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/ShareButton.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\nimport copy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nexport default function ShareButton({\n  pathname\n}) {\n  const [copied, setCopied] = useState(false);\n  const timer = 5000;\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000/${pathname}`);\n    setTimeout(() => setCopied(false), timer);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, copied ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"Link copiado!\") : /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: () => shareHandleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 64\n    }\n  }));\n}\nShareButton.propTypes = {\n  pathname: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/ShareButton.jsx"],"names":["React","useState","PropTypes","Image","copy","ShareButton","pathname","copied","setCopied","timer","shareHandleClick","setTimeout","shareIcon","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAGA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMQ,KAAK,GAAG,IAAd;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,IAAAA,IAAI,CAAE,yBAAwBE,QAAS,EAAnC,CAAJ;AACAK,IAAAA,UAAU,CAAC,MAAMH,SAAS,CAAC,KAAD,CAAhB,EAAyBC,KAAzB,CAAV;AACD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,gBAAG;AAAG,mBAAY,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,gBAAkD,oBAAC,KAAD;AACvD,mBAAY,WAD2C;AAEvD,IAAA,GAAG,EAAGK,SAFiD;AAGvD,IAAA,GAAG,EAAC,YAHmD;AAIvD,IAAA,OAAO,EAAG,MAAMF,gBAAgB,EAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3D,CADF;AAUD;AAEDL,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,MAAV,CAAiBC;AADL,CAAxB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default function ShareButton({ pathname }) {\n  const [copied, setCopied] = useState(false);\n  const timer = 5000;\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000/${pathname}`);\n    setTimeout(() => setCopied(false), timer);\n  };\n\n  return (\n    <div>\n      {copied ? <p data-testid=\"share-btn\">Link copiado!</p> : <Image\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"share icon\"\n        onClick={ () => shareHandleClick() }\n      />}\n    </div>\n  );\n}\n\nShareButton.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}