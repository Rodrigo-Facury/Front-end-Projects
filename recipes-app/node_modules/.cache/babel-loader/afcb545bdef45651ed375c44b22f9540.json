{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/FavoriteCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\n\nfunction FavoriteCard(props) {\n  const {\n    recipe,\n    updateFavorite,\n    index,\n    pathname\n  } = props;\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image\n  } = recipe;\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 500;\n\n  const removeFromFavorites = recipeId => {\n    const oldFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorite = oldFavorite.filter(favorite => favorite.id !== recipeId);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    updateFavorite(newFavorite);\n  };\n\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    navigator.clipboard.writeText(linkToDetails);\n    showSharedMessage();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), type === 'comida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, area), ' - ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, category)) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, name), sharedMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"input\", {\n    alt: \"Remove from favorites\",\n    type: \"image\",\n    onClick: () => removeFromFavorites(id),\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    alt: \"Share button\",\n    type: \"image\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    onClick: copyLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nFavoriteCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  }).isRequired,\n  updateFavorite: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default FavoriteCard;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/FavoriteCard.js"],"names":["React","useState","PropTypes","FavoriteCard","props","recipe","updateFavorite","index","pathname","id","type","area","category","alcoholicOrNot","name","image","sharedMessage","setSharedMessage","PERIOD_OF_MESSAGE","removeFromFavorites","recipeId","oldFavorite","JSON","parse","localStorage","getItem","newFavorite","filter","favorite","setItem","stringify","showSharedMessage","setTimeout","copyLink","linkBase","window","location","origin","linkToDetails","navigator","clipboard","writeText","blackHeartIcon","shareIcon","propTypes","shape","string","isRequired","func","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction FavoriteCard(props) {\n  const { recipe, updateFavorite, index, pathname } = props;\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n  } = recipe;\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 500;\n\n  const removeFromFavorites = (recipeId) => {\n    const oldFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorite = oldFavorite.filter((favorite) => favorite.id !== recipeId);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    updateFavorite(newFavorite);\n  };\n\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    navigator.clipboard.writeText(linkToDetails);\n    showSharedMessage();\n  };\n\n  return (\n    <div>\n      <img\n        src={ image }\n        alt={ name }\n        data-testid={ `${index}-horizontal-image` }\n      />\n      { (type === 'comida') ? (\n        <p data-testid={ `${index}-horizontal-top-text` }>\n          <span>{ area }</span>\n          {' - '}\n          <span>{ category }</span>\n        </p>\n      ) : (\n        <p data-testid={ `${index}-horizontal-top-text` }>{ alcoholicOrNot }</p>\n      ) }\n      <p data-testid={ `${index}-horizontal-name` }>{ name }</p>\n      { sharedMessage && <p>Link copiado!</p> }\n      <input\n        alt=\"Remove from favorites\"\n        type=\"image\"\n        onClick={ () => removeFromFavorites(id) }\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        src={ blackHeartIcon }\n      />\n      <input\n        alt=\"Share button\"\n        type=\"image\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        onClick={ copyLink }\n      />\n    </div>\n  );\n}\n\nFavoriteCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n  }).isRequired,\n  updateFavorite: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FavoriteCard;\n"]},"metadata":{},"sourceType":"module"}