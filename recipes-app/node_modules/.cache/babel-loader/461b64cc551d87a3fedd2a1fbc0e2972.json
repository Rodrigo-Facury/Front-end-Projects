{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/Bebidas.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipeCard from '../components/RecipeCard';\nimport MyContext from '../context/MyContext';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './comidas.css';\n\nfunction Bebidas(props) {\n  const {\n    history: {\n      location: {\n        pathname,\n        state\n      }\n    }\n  } = props;\n  const [drinkRecipes, setDrinkRecipes] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const drinkEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const drinkCategoriesEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\n  const newDrinkRecipes = data => {\n    setDrinkRecipes(data);\n  };\n\n  const getAllDrinks = () => {\n    if (!state) {\n      fetch(drinkEndpoint).then(res => res.json()).then(({\n        drinks\n      }) => setDrinkRecipes(drinks));\n    } else {\n      fetchAPI.filteredDrinks('ingredient', state.ingredient).then(drinks => setDrinkRecipes(drinks));\n    }\n  };\n\n  useEffect(() => {\n    getAllDrinks();\n    fetch(drinkCategoriesEndpoint).then(res => res.json()).then(({\n      drinks\n    }) => setDrinkCategories(drinks)).then(setIsLoading(true));\n  }, []);\n\n  const handleClick = ({\n    target\n  }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n      fetch(URL).then(res => res.json()).then(({\n        drinks\n      }) => setDrinkRecipes(drinks));\n      allFilters.forEach(filter => {\n        filter.className = '';\n      });\n      target.className = 'clicked';\n    } else {\n      getAllDrinks();\n      target.className = '';\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, drinkRecipes.map(({\n      strDrinkThumb,\n      strDrink,\n      idDrink\n    }, index) => {\n      if (index < MAX_RECIPES) {\n        return /*#__PURE__*/React.createElement(Link, {\n          key: strDrink,\n          to: `/bebidas/${idDrink}`,\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(RecipeCard, {\n          key: strDrink,\n          thumb: strDrinkThumb,\n          name: strDrink,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      return null;\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"category-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, drinkCategories.map(({\n      strCategory\n    }, index) => {\n      if (index < MAX_CATEGORIES) {\n        return /*#__PURE__*/React.createElement(CategoryButton, {\n          key: strCategory,\n          strCategory: strCategory,\n          handleClick: handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      onClick: getAllDrinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"All\")), /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: newDrinkRecipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      titulo: \"Bebidas\",\n      showProfileIcon: \"sim\",\n      pathname: pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 42\n    }\n  }));\n}\n\nBebidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default Bebidas;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/Bebidas.js"],"names":["React","useEffect","useState","Link","Row","PropTypes","CategoryButton","Header","Footer","RecipeCard","MyContext","fetchAPI","Bebidas","props","history","location","pathname","state","drinkRecipes","setDrinkRecipes","drinkCategories","setDrinkCategories","isLoading","setIsLoading","MAX_RECIPES","MAX_CATEGORIES","drinkEndpoint","drinkCategoriesEndpoint","newDrinkRecipes","data","getAllDrinks","fetch","then","res","json","drinks","filteredDrinks","ingredient","handleClick","target","className","URL","innerText","allFilters","document","getElementsByName","forEach","filter","map","strDrinkThumb","strDrink","idDrink","index","strCategory","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipeCard from '../components/RecipeCard';\nimport MyContext from '../context/MyContext';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './comidas.css';\n\nfunction Bebidas(props) {\n  const { history: { location: { pathname, state } } } = props;\n  const [drinkRecipes, setDrinkRecipes] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const drinkEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const drinkCategoriesEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\n  const newDrinkRecipes = (data) => {\n    setDrinkRecipes(data);\n  };\n\n  const getAllDrinks = () => {\n    if (!state) {\n      fetch(drinkEndpoint)\n        .then((res) => res.json())\n        .then(({ drinks }) => setDrinkRecipes(drinks));\n    } else {\n      fetchAPI.filteredDrinks('ingredient', state.ingredient)\n        .then((drinks) => setDrinkRecipes(drinks));\n    }\n  };\n\n  useEffect(() => {\n    getAllDrinks();\n\n    fetch(drinkCategoriesEndpoint)\n      .then((res) => res.json())\n      .then(({ drinks }) => setDrinkCategories(drinks))\n      .then(setIsLoading(true));\n  }, []);\n\n  const handleClick = ({ target }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n\n      fetch(URL)\n        .then((res) => res.json())\n        .then(({ drinks }) => setDrinkRecipes(drinks));\n\n      allFilters.forEach((filter) => { filter.className = ''; });\n\n      target.className = 'clicked';\n    } else {\n      getAllDrinks();\n      target.className = '';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"main-container\">\n        <div className=\"card-container\">\n          { drinkRecipes.map(({ strDrinkThumb, strDrink, idDrink }, index) => {\n            if (index < MAX_RECIPES) {\n              return (\n                <Link key={ strDrink } to={ `/bebidas/${idDrink}` } className=\"card\">\n                  <RecipeCard\n                    key={ strDrink }\n                    thumb={ strDrinkThumb }\n                    name={ strDrink }\n                    index={ index }\n                  />\n                </Link>\n              );\n            }\n            return null;\n          }) }\n        </div>\n        <Row className=\"category-btn\">\n          { drinkCategories.map(({ strCategory }, index) => {\n            if (index < MAX_CATEGORIES) {\n              return (\n                <CategoryButton\n                  key={ strCategory }\n                  strCategory={ strCategory }\n                  handleClick={ handleClick }\n                />\n              );\n            }\n            return null;\n          }) }\n          <button\n            data-testid=\"All-category-filter\"\n            type=\"button\"\n            onClick={ getAllDrinks }\n          >\n            All\n          </button>\n        </Row>\n        <MyContext.Provider value={ newDrinkRecipes }>\n          <Header titulo=\"Bebidas\" showProfileIcon=\"sim\" pathname={ pathname } />\n        </MyContext.Provider>\n        <Footer />\n      </div>\n    );\n  }\n\n  return <div className=\"main-container\"><div className=\"c-loader\" /></div>;\n}\n\nBebidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Bebidas;\n"]},"metadata":{},"sourceType":"module"}