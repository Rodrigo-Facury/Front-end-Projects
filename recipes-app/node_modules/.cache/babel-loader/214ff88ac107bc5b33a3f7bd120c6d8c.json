{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/RecipesDetails.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Carousel, Button, Image } from 'react-bootstrap';\nimport * as fetchAPI from '../service/fetchAPI';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './details.css';\nconst maxSuggestions = 6;\n\nfunction RecipesDetails(props) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tip, setTip] = useState([]);\n  const [URLId, setURLId] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const {\n    idMeal,\n    strArea,\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube\n  } = data;\n  const {\n    history: {\n      location: {\n        pathname\n      }\n    }\n  } = props;\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    fetchAPI.fetchRecipeById(id).then(({\n      meals\n    }) => setData(meals[0]));\n    fetchAPI.fetchDrinkSuggestions().then(({\n      drinks\n    }) => setTip(drinks));\n\n    const heartIcon = () => {\n      const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      return isFavorite ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    };\n\n    heartIcon();\n  }, []);\n  useEffect(() => {\n    if (strYoutube) {\n      setURLId(strYoutube.split('=')[1]);\n    }\n\n    setLoading(false);\n  }, [data]);\n  const favoriteRecipes = [{\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  }];\n\n  const getIngredients = () => {\n    const keys = Object.keys(data).filter(key => key.includes('strIngredient'));\n    return keys.map((key, index) => {\n      const measure = `strMeasure${index + 1}`;\n      return data[key] !== '' && data[key] !== null && /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        \"data-testid\": `${index}-ingredient-name-and-measure`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, `- ${data[key]} - ${data[measure]}`);\n    });\n  };\n\n  const buttonName = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    return inProgress ? 'Continuar Receita' : 'Iniciar Receita';\n  };\n\n  const handleClick = () => setRedirect(true);\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000${pathname}`);\n  };\n\n  const setFavorite = () => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    setFavorite();\n    return bool;\n  }\n\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/comidas/${data.idMeal}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-containe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    \"data-testid\": \"recipe-photo\",\n    src: strMealThumb,\n    alt: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: () => shareHandleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), copied && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 22\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"favorite-btn\",\n    alt: \"heart\",\n    src: icon,\n    onClick: () => toggleHeartIcon(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h5\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, getIngredients()), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Video\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    \"data-testid\": \"video\",\n    height: \"215px\",\n    width: \"100%\",\n    title: \"recipe\",\n    src: `https://www.youtube.com/embed/${URLId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Recomendadas\"), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"carousel\",\n    indicators: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, tip && tip.map((recipe, index) => index < maxSuggestions && /*#__PURE__*/React.createElement(Carousel.Item, {\n    key: index,\n    \"data-testid\": `${index}-recomendation-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: recipe.strDrinkThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, recipe.strDrink)))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    className: \"btn-success\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, buttonName()));\n}\n\nRecipesDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default RecipesDetails;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/RecipesDetails.jsx"],"names":["React","useState","useEffect","Redirect","copy","PropTypes","Carousel","Button","Image","fetchAPI","maxSuggestions","RecipesDetails","props","data","setData","loading","setLoading","tip","setTip","URLId","setURLId","redirect","setRedirect","copied","setCopied","icon","setIcon","whiteHeartIcon","idMeal","strArea","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","history","location","pathname","id","split","fetchRecipeById","then","meals","fetchDrinkSuggestions","drinks","heartIcon","isFavorite","JSON","parse","localStorage","getItem","blackHeartIcon","favoriteRecipes","type","area","category","alcoholicOrNot","name","image","getIngredients","keys","Object","filter","key","includes","map","index","measure","buttonName","inProgress","handleClick","shareHandleClick","setFavorite","setItem","stringify","toggleHeartIcon","bool","shareIcon","recipe","strDrinkThumb","strDrink","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Carousel, Button, Image } from 'react-bootstrap';\nimport * as fetchAPI from '../service/fetchAPI';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport './details.css';\n\nconst maxSuggestions = 6;\n\nfunction RecipesDetails(props) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tip, setTip] = useState([]);\n  const [URLId, setURLId] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const {\n    idMeal,\n    strArea,\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n  } = data;\n\n  const { history: { location: { pathname } } } = props;\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    fetchAPI.fetchRecipeById(id).then(({ meals }) => setData(meals[0]));\n    fetchAPI.fetchDrinkSuggestions().then(({ drinks }) => setTip(drinks));\n\n    const heartIcon = () => {\n      const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      return isFavorite ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    };\n\n    heartIcon();\n  }, []);\n\n  useEffect(() => {\n    if (strYoutube) { setURLId(strYoutube.split('=')[1]); }\n    setLoading(false);\n  }, [data]);\n\n  const favoriteRecipes = [{\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  }];\n\n  const getIngredients = () => {\n    const keys = Object.keys(data).filter((key) => key.includes('strIngredient'));\n    return keys.map((key, index) => {\n      const measure = `strMeasure${index + 1}`;\n      return (\n        (data[key] !== '' && data[key] !== null)\n          && (\n            <p\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              { `- ${data[key]} - ${data[measure]}` }\n            </p>\n          )\n      );\n    });\n  };\n\n  const buttonName = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    return inProgress ? 'Continuar Receita' : 'Iniciar Receita';\n  };\n\n  const handleClick = () => setRedirect(true);\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000${pathname}`);\n  };\n\n  const setFavorite = () => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon\n      ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    setFavorite();\n    return bool;\n  }\n\n  if (redirect) return <Redirect to={ `/comidas/${data.idMeal}/in-progress` } />;\n  if (loading) return <h1>Loading...</h1>;\n  return (\n    <div className=\"main-containe\">\n      <Image fluid data-testid=\"recipe-photo\" src={ strMealThumb } alt=\"recipe\" />\n      <div className=\"favorite-container\">\n        <h2 data-testid=\"recipe-title\">{strMeal}</h2>\n        <div className=\"icons\">\n          <Image\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"share icon\"\n            onClick={ () => shareHandleClick() }\n          />\n          {copied && <span>Link copiado!</span>}\n          <Image\n            data-testid=\"favorite-btn\"\n            alt=\"heart\"\n            src={ icon }\n            onClick={ () => toggleHeartIcon() }\n          />\n        </div>\n      </div>\n      <h5 data-testid=\"recipe-category\">{ strCategory }</h5>\n      <h4>Ingredientes</h4>\n      <div className=\"ingredients-container\">\n        {getIngredients()}\n      </div>\n      <h4>Instruções</h4>\n      <p data-testid=\"instructions\">{ strInstructions }</p>\n      <h4>Video</h4>\n      <iframe\n        data-testid=\"video\"\n        height=\"215px\"\n        width=\"100%\"\n        title=\"recipe\"\n        src={ `https://www.youtube.com/embed/${URLId}` }\n      />\n      <h4>Recomendadas</h4>\n      <Carousel className=\"carousel\" indicators={ false }>\n        {\n          tip && tip.map((recipe, index) => (\n            index < maxSuggestions\n            && (\n              <Carousel.Item key={ index } data-testid={ `${index}-recomendation-card` }>\n                <Image fluid src={ recipe.strDrinkThumb } />\n                <h4 data-testid={ `${index}-recomendation-title` }>\n                  { recipe.strDrink }\n                </h4>\n              </Carousel.Item>)))\n        }\n      </Carousel>\n      <Button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"btn-success\"\n        onClick={ handleClick }\n      >\n        {buttonName()}\n      </Button>\n    </div>\n  );\n}\n\nRecipesDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default RecipesDetails;\n"]},"metadata":{},"sourceType":"module"}