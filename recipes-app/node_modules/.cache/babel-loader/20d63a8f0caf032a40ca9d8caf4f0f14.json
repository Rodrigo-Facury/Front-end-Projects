{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/Comidas.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Row } from 'react-bootstrap';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipeCard from '../components/RecipeCard';\nimport MyContext from '../context/MyContext';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './comidas.css';\n\nfunction Comidas(props) {\n  const {\n    history: {\n      location: {\n        pathname,\n        state\n      }\n    }\n  } = props;\n  const [foodRecipes, setFoodRecipes] = useState([]);\n  const [foodCategories, setFoodCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const foodEndpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const foodCategoriesEndpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n\n  const newFoodRecipes = data => {\n    setFoodRecipes(data);\n  };\n\n  const getAllFoods = () => {\n    if (!state) {\n      fetch(foodEndpoint).then(res => res.json()).then(({\n        meals\n      }) => setFoodRecipes(meals));\n    } else {\n      fetchAPI.filteredRecipes('ingredient', state.ingredient).then(meals => setFoodRecipes(meals));\n    }\n  };\n\n  useEffect(() => {\n    getAllFoods();\n    fetch(foodCategoriesEndpoint).then(res => res.json()).then(({\n      meals\n    }) => setFoodCategories(meals)).then(setIsLoading(true));\n  }, []);\n\n  const handleClick = ({\n    target\n  }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n      fetch(URL).then(res => res.json()).then(({\n        meals\n      }) => setFoodRecipes(meals));\n      allFilters.forEach(filter => {\n        filter.className = '';\n      });\n      target.className = 'clicked';\n    } else {\n      getAllFoods();\n      target.className = '';\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, foodRecipes.map(({\n      strMealThumb,\n      strMeal,\n      idMeal\n    }, index) => {\n      if (index < MAX_RECIPES) {\n        return /*#__PURE__*/React.createElement(Link, {\n          key: strMeal,\n          to: `/comidas/${idMeal}`,\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(RecipeCard, {\n          thumb: strMealThumb,\n          name: strMeal,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      return null;\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"category-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, foodCategories.map(({\n      strCategory\n    }, index) => {\n      if (index < MAX_CATEGORIES) {\n        return /*#__PURE__*/React.createElement(CategoryButton, {\n          key: strCategory,\n          strCategory: strCategory,\n          handleClick: handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      onClick: getAllFoods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"All\")), /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: newFoodRecipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      titulo: \"Comidas\",\n      showProfileIcon: \"sim\",\n      pathname: pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 42\n    }\n  }));\n}\n\nComidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default Comidas;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/Comidas.js"],"names":["React","useEffect","useState","Link","PropTypes","Row","CategoryButton","Header","Footer","RecipeCard","MyContext","fetchAPI","Comidas","props","history","location","pathname","state","foodRecipes","setFoodRecipes","foodCategories","setFoodCategories","isLoading","setIsLoading","MAX_RECIPES","MAX_CATEGORIES","foodEndpoint","foodCategoriesEndpoint","newFoodRecipes","data","getAllFoods","fetch","then","res","json","meals","filteredRecipes","ingredient","handleClick","target","className","URL","innerText","allFilters","document","getElementsByName","forEach","filter","map","strMealThumb","strMeal","idMeal","index","strCategory","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Row } from 'react-bootstrap';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipeCard from '../components/RecipeCard';\nimport MyContext from '../context/MyContext';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './comidas.css';\n\nfunction Comidas(props) {\n  const { history: { location: { pathname, state } } } = props;\n  const [foodRecipes, setFoodRecipes] = useState([]);\n  const [foodCategories, setFoodCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const foodEndpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const foodCategoriesEndpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n\n  const newFoodRecipes = (data) => {\n    setFoodRecipes(data);\n  };\n\n  const getAllFoods = () => {\n    if (!state) {\n      fetch(foodEndpoint)\n        .then((res) => res.json())\n        .then(({ meals }) => setFoodRecipes(meals));\n    } else {\n      fetchAPI.filteredRecipes('ingredient', state.ingredient)\n        .then((meals) => setFoodRecipes(meals));\n    }\n  };\n\n  useEffect(() => {\n    getAllFoods();\n\n    fetch(foodCategoriesEndpoint)\n      .then((res) => res.json())\n      .then(({ meals }) => setFoodCategories(meals))\n      .then(setIsLoading(true));\n  }, []);\n\n  const handleClick = ({ target }) => {\n    if (target.className !== 'clicked') {\n      const URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${target.innerText}`;\n      const allFilters = document.getElementsByName('category-filter');\n\n      fetch(URL)\n        .then((res) => res.json())\n        .then(({ meals }) => setFoodRecipes(meals));\n\n      allFilters.forEach((filter) => { filter.className = ''; });\n\n      target.className = 'clicked';\n    } else {\n      getAllFoods();\n      target.className = '';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"main-container\">\n        <div className=\"card-container\">\n          { foodRecipes.map(({ strMealThumb, strMeal, idMeal }, index) => {\n            if (index < MAX_RECIPES) {\n              return (\n                <Link key={ strMeal } to={ `/comidas/${idMeal}` } className=\"card\">\n                  <RecipeCard\n                    thumb={ strMealThumb }\n                    name={ strMeal }\n                    index={ index }\n                  />\n                </Link>\n              );\n            }\n            return null;\n          }) }\n        </div>\n        <Row className=\"category-btn\">\n          { foodCategories.map(({ strCategory }, index) => {\n            if (index < MAX_CATEGORIES) {\n              return (\n                <CategoryButton\n                  key={ strCategory }\n                  strCategory={ strCategory }\n                  handleClick={ handleClick }\n                />\n              );\n            }\n            return null;\n          }) }\n          <button\n            data-testid=\"All-category-filter\"\n            type=\"button\"\n            onClick={ getAllFoods }\n          >\n            All\n          </button>\n        </Row>\n        <MyContext.Provider value={ newFoodRecipes }>\n          <Header titulo=\"Comidas\" showProfileIcon=\"sim\" pathname={ pathname } />\n        </MyContext.Provider>\n        <Footer />\n      </div>\n    );\n  }\n\n  return <div className=\"main-container\"><div className=\"c-loader\" /></div>;\n}\n\nComidas.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Comidas;\n"]},"metadata":{},"sourceType":"module"}