{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/DrinkDetails.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Carousel, Button, Image } from 'react-bootstrap';\nimport * as fetchAPI from '../service/fetchAPI';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './details.css';\nconst maxSuggestions = 6;\n\nfunction DrinkDetails(props) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tip, setTip] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const {\n    strDrinkThumb,\n    strDrink,\n    strInstructions,\n    strAlcoholic,\n    idDrink,\n    strCategory\n  } = data;\n  const {\n    history: {\n      location: {\n        pathname\n      }\n    }\n  } = props;\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    fetchAPI.fetchDrinkById(id).then(({\n      drinks\n    }) => setData(drinks[0]));\n    fetchAPI.fetchRecipeSuggestions().then(({\n      meals\n    }) => setTip(meals));\n\n    const heartIcon = () => {\n      const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      return isFavorite ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    };\n\n    heartIcon();\n  }, []);\n  useEffect(() => {\n    setLoading(false);\n  }, [data, icon]);\n  const favoriteRecipes = [{\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb\n  }];\n\n  const getIngredients = () => {\n    const keys = Object.keys(data).filter(key => key.includes('strIngredient'));\n    return keys.map((key, index) => {\n      const measure = `strMeasure${index + 1}`;\n      return data[key] !== '' && data[key] !== null && /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        \"data-testid\": `${index}-ingredient-name-and-measure`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, `- ${data[key]} - ${data[measure]}`);\n    });\n  };\n\n  const buttonName = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const condition = inProgress ? inProgress.cocktails[data.idDrink] : undefined;\n    return condition ? 'Continuar Receita' : 'Iniciar Receita';\n  };\n\n  const handleClick = () => setRedirect(true);\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000${pathname}`);\n  };\n\n  const setFavorite = () => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    setFavorite();\n    return bool;\n  }\n\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/bebidas/${data.idDrink}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-containe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    \"data-testid\": \"recipe-photo\",\n    src: strDrinkThumb,\n    alt: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: () => shareHandleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), copied && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 22\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"favorite-btn\",\n    alt: \"heart\",\n    src: icon,\n    onClick: () => toggleHeartIcon(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h5\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, strAlcoholic), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, getIngredients()), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Recomendadas\"), /*#__PURE__*/React.createElement(Carousel, {\n    indicators: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, tip && tip.map((recipe, index) => index < maxSuggestions && /*#__PURE__*/React.createElement(Carousel.Item, {\n    key: index,\n    \"data-testid\": `${index}-recomendation-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: recipe.strMealThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, recipe.strMeal)))), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      position: 'fixed',\n      bottom: '0'\n    },\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    className: \"btn-success\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, buttonName()));\n}\n\nDrinkDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default DrinkDetails;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/DrinkDetails.jsx"],"names":["React","useState","useEffect","Redirect","copy","PropTypes","Carousel","Button","Image","fetchAPI","maxSuggestions","DrinkDetails","props","data","setData","loading","setLoading","tip","setTip","redirect","setRedirect","copied","setCopied","icon","setIcon","whiteHeartIcon","strDrinkThumb","strDrink","strInstructions","strAlcoholic","idDrink","strCategory","history","location","pathname","id","split","fetchDrinkById","then","drinks","fetchRecipeSuggestions","meals","heartIcon","isFavorite","JSON","parse","localStorage","getItem","blackHeartIcon","favoriteRecipes","type","area","category","alcoholicOrNot","name","image","getIngredients","keys","Object","filter","key","includes","map","index","measure","buttonName","inProgress","condition","cocktails","undefined","handleClick","shareHandleClick","setFavorite","setItem","stringify","toggleHeartIcon","bool","shareIcon","recipe","strMealThumb","strMeal","position","bottom","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Carousel, Button, Image } from 'react-bootstrap';\nimport * as fetchAPI from '../service/fetchAPI';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport './details.css';\n\nconst maxSuggestions = 6;\n\nfunction DrinkDetails(props) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tip, setTip] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const { strDrinkThumb,\n    strDrink, strInstructions, strAlcoholic, idDrink, strCategory } = data;\n\n  const { history: { location: { pathname } } } = props;\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    fetchAPI.fetchDrinkById(id).then(({ drinks }) => setData(drinks[0]));\n    fetchAPI.fetchRecipeSuggestions().then(({ meals }) => setTip(meals));\n\n    const heartIcon = () => {\n      const isFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      return isFavorite ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    };\n\n    heartIcon();\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [data, icon]);\n\n  const favoriteRecipes = [{\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n  }];\n\n  const getIngredients = () => {\n    const keys = Object.keys(data).filter((key) => key.includes('strIngredient'));\n    return keys.map((key, index) => {\n      const measure = `strMeasure${index + 1}`;\n      return (\n        (data[key] !== '' && data[key] !== null)\n          && (\n            <p\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              { `- ${data[key]} - ${data[measure]}` }\n            </p>\n          )\n      );\n    });\n  };\n\n  const buttonName = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const condition = inProgress ? inProgress.cocktails[data.idDrink] : undefined;\n    return condition ? 'Continuar Receita' : 'Iniciar Receita';\n  };\n\n  const handleClick = () => setRedirect(true);\n\n  const shareHandleClick = () => {\n    setCopied(true);\n    copy(`http://localhost:3000${pathname}`);\n  };\n\n  const setFavorite = () => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon\n      ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    setFavorite();\n    return bool;\n  }\n\n  if (redirect) return <Redirect to={ `/bebidas/${data.idDrink}/in-progress` } />;\n\n  if (loading) return <h1>Loading...</h1>;\n  return (\n    <div className=\"main-containe\">\n      <Image fluid data-testid=\"recipe-photo\" src={ strDrinkThumb } alt=\"recipe\" />\n      <div className=\"favorite-container\">\n        <h2 data-testid=\"recipe-title\">{strDrink}</h2>\n        <div className=\"icons\">\n          <Image\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"share icon\"\n            onClick={ () => shareHandleClick() }\n          />\n          {copied && <span>Link copiado!</span>}\n          <Image\n            data-testid=\"favorite-btn\"\n            alt=\"heart\"\n            src={ icon }\n            onClick={ () => toggleHeartIcon() }\n          />\n        </div>\n      </div>\n      <h5 data-testid=\"recipe-category\">{ strAlcoholic }</h5>\n      <h4>Ingredientes</h4>\n      <div className=\"ingredients-container\">\n        {getIngredients()}\n      </div>\n      <h4>Instruções</h4>\n      <p data-testid=\"instructions\">{ strInstructions }</p>\n      <h4>Recomendadas</h4>\n      <Carousel indicators={ false }>\n        {\n          tip && tip.map((recipe, index) => (\n            index < maxSuggestions\n            && (\n              <Carousel.Item key={ index } data-testid={ `${index}-recomendation-card` }>\n                <Image fluid src={ recipe.strMealThumb } />\n                <h4 data-testid={ `${index}-recomendation-title` }>\n                  { recipe.strMeal }\n                </h4>\n              </Carousel.Item>)))\n        }\n      </Carousel>\n      <Button\n        style={ { position: 'fixed', bottom: '0' } }\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"btn-success\"\n        onClick={ handleClick }\n      >\n        {buttonName()}\n      </Button>\n    </div>\n  );\n}\n\nDrinkDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default DrinkDetails;\n"]},"metadata":{},"sourceType":"module"}