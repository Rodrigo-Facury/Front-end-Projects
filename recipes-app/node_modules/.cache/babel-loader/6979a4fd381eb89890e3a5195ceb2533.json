{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/FavoriteCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './doneCard.css';\n\nconst copy = require('clipboard-copy');\n\nfunction FavoriteCard(props) {\n  const {\n    recipe,\n    updateFavorite,\n    index\n  } = props;\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image\n  } = recipe;\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 1000;\n\n  const removeFromFavorites = recipeId => {\n    const oldFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorite = oldFavorite.filter(favorite => favorite.id !== recipeId);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    updateFavorite(newFavorite);\n  };\n\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    copy(linkToDetails);\n    showSharedMessage();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"done-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: image,\n    alt: name,\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, type === 'comida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, area), ' - ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, category)) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, alcoholicOrNot)), /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    alt: \"Remove from favorites\",\n    onClick: () => removeFromFavorites(id),\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    alt: \"Share button\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    onClick: copyLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), sharedMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 28\n    }\n  }, \"Link copiado!\")));\n}\n\nFavoriteCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  }).isRequired,\n  updateFavorite: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default FavoriteCard;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/FavoriteCard.js"],"names":["React","useState","PropTypes","Link","Image","copy","require","FavoriteCard","props","recipe","updateFavorite","index","id","type","area","category","alcoholicOrNot","name","image","sharedMessage","setSharedMessage","PERIOD_OF_MESSAGE","removeFromFavorites","recipeId","oldFavorite","JSON","parse","localStorage","getItem","newFavorite","filter","favorite","setItem","stringify","showSharedMessage","setTimeout","copyLink","linkBase","window","location","origin","linkToDetails","blackHeartIcon","shareIcon","propTypes","shape","string","isRequired","func","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport './doneCard.css';\n\nconst copy = require('clipboard-copy');\n\nfunction FavoriteCard(props) {\n  const { recipe, updateFavorite, index } = props;\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n  } = recipe;\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 1000;\n\n  const removeFromFavorites = (recipeId) => {\n    const oldFavorite = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorite = oldFavorite.filter((favorite) => favorite.id !== recipeId);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    updateFavorite(newFavorite);\n  };\n\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    copy(linkToDetails);\n    showSharedMessage();\n  };\n\n  return (\n    <div className=\"done-card\">\n      <Link to={ `/${type}s/${id}` }>\n        <Image\n          fluid\n          src={ image }\n          alt={ name }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <div className=\"info-favorite\">\n        <div className=\"category-area\">\n          { (type === 'comida') ? (\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              <span>{ area }</span>\n              {' - '}\n              <span>{ category }</span>\n            </p>\n          ) : (\n            <p data-testid={ `${index}-horizontal-top-text` }>{ alcoholicOrNot }</p>\n          ) }\n        </div>\n        <Link to={ `/${type}s/${id}` }>\n          <h4 data-testid={ `${index}-horizontal-name` }>{ name }</h4>\n        </Link>\n        <div className=\"icons\">\n          <Image\n            alt=\"Remove from favorites\"\n            onClick={ () => removeFromFavorites(id) }\n            data-testid={ `${index}-horizontal-favorite-btn` }\n            src={ blackHeartIcon }\n          />\n          <Image\n            alt=\"Share button\"\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            onClick={ copyLink }\n          />\n        </div>\n        { sharedMessage && <p>Link copiado!</p> }\n      </div>\n    </div>\n  );\n}\n\nFavoriteCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n  }).isRequired,\n  updateFavorite: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FavoriteCard;\n"]},"metadata":{},"sourceType":"module"}