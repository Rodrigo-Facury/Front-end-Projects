{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/FavoriteButton.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nexport default function FavoriteButton({\n  recipe,\n  id,\n  type\n}) {\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strAlcoholic,\n    strMealThumb,\n    strMeal,\n    strArea\n  } = recipe;\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n\n    const saved = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = saved.some(item => item.id === id);\n\n    if (alreadyFavorite) {\n      setIcon(blackHeartIcon);\n    }\n  }, []);\n  const favoriteDrinks = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb\n  };\n  const favoriteFoods = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  };\n\n  const setFavorite = () => {\n    let favorites = [...JSON.parse(localStorage.getItem('favoriteRecipes'))];\n\n    if (type === 'drink') {\n      favorites = [...favorites, favoriteDrinks];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    } else {\n      favorites = [...favorites, favoriteFoods];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    }\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n\n    if (icon === blackHeartIcon) {\n      let favorites = [...JSON.parse(localStorage.getItem('favoriteRecipes'))];\n      favorites = favorites.filter(item => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    }\n\n    if (icon === whiteHeartIcon) {\n      return setFavorite();\n    }\n\n    return bool;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": \"favorite-btn\",\n    alt: \"heart\",\n    src: icon,\n    onClick: () => toggleHeartIcon(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/FavoriteButton.jsx"],"names":["React","useState","useEffect","PropTypes","Image","FavoriteButton","recipe","id","type","icon","setIcon","whiteHeartIcon","strDrinkThumb","strDrink","strCategory","strAlcoholic","strMealThumb","strMeal","strArea","JSON","parse","localStorage","getItem","setItem","stringify","saved","alreadyFavorite","some","item","blackHeartIcon","favoriteDrinks","area","category","alcoholicOrNot","name","image","favoriteFoods","setFavorite","favorites","toggleHeartIcon","bool","filter","propTypes","objectOf","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function FavoriteButton({ recipe, id, type }) {\n  const [icon, setIcon] = useState(whiteHeartIcon);\n  const { strDrinkThumb,\n    strDrink, strCategory, strAlcoholic, strMealThumb, strMeal, strArea } = recipe;\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    const saved = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = saved.some((item) => item.id === id);\n    if (alreadyFavorite) {\n      setIcon(blackHeartIcon);\n    }\n  }, []);\n\n  const favoriteDrinks = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n  };\n\n  const favoriteFoods = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n\n  const setFavorite = () => {\n    let favorites = [...JSON.parse(localStorage.getItem('favoriteRecipes'))];\n\n    if (type === 'drink') {\n      favorites = [...favorites, favoriteDrinks];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    } else {\n      favorites = [...favorites, favoriteFoods];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    }\n  };\n\n  function toggleHeartIcon() {\n    const bool = icon === whiteHeartIcon\n      ? setIcon(blackHeartIcon) : setIcon(whiteHeartIcon);\n    if (icon === blackHeartIcon) {\n      let favorites = [...JSON.parse(localStorage.getItem('favoriteRecipes'))];\n      favorites = favorites.filter((item) => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    }\n    if (icon === whiteHeartIcon) {\n      return setFavorite();\n    }\n    return bool;\n  }\n\n  return (\n    <div>\n      <Image\n        data-testid=\"favorite-btn\"\n        alt=\"heart\"\n        src={ icon }\n        onClick={ () => toggleHeartIcon() }\n      />\n    </div>\n  );\n}\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}