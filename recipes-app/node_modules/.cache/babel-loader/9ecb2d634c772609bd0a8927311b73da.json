{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/DoneCard.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './doneCard.css';\n\nfunction DoneCard({\n  recipe,\n  index\n}) {\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    doneDate,\n    tags\n  } = recipe;\n  const tagsTratada = tags === null ? [] : [...tags];\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 1000;\n\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    showSharedMessage();\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    copy(linkToDetails);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"done-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: image,\n    alt: name,\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, type === 'bebida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, alcoholicOrNot) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(Image, {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: copyLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, `Feita em: ${doneDate}`), sharedMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }\n  }, \"Link copiado!\"), tagsTratada ? tagsTratada.map(tag => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, tag)) : null));\n}\n\nDoneCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n    img: PropTypes.string,\n    doneDate: PropTypes.number,\n    name: PropTypes.string,\n    image: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default DoneCard;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/components/DoneCard.js"],"names":["React","useState","copy","Link","Image","PropTypes","DoneCard","recipe","index","id","type","area","category","alcoholicOrNot","name","image","doneDate","tags","tagsTratada","sharedMessage","setSharedMessage","PERIOD_OF_MESSAGE","showSharedMessage","setTimeout","copyLink","linkBase","window","location","origin","linkToDetails","shareIcon","map","tag","propTypes","shape","string","arrayOf","object","isRequired","img","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport './doneCard.css';\n\nfunction DoneCard({ recipe, index }) {\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    doneDate,\n    tags,\n  } = recipe;\n\n  const tagsTratada = tags === null ? [] : [...tags];\n\n  const [sharedMessage, setSharedMessage] = useState(false);\n  const PERIOD_OF_MESSAGE = 1000;\n  const showSharedMessage = () => {\n    setSharedMessage(true);\n    setTimeout(() => setSharedMessage(false), PERIOD_OF_MESSAGE);\n  };\n\n  const copyLink = () => {\n    showSharedMessage();\n    const linkBase = window.location.origin;\n    const linkToDetails = `${linkBase}/${type}s/${id}`;\n    copy(linkToDetails);\n  };\n\n  return (\n    <div className=\"done-card\">\n      <Link to={ `/${type}s/${id}` }>\n        <Image\n          fluid\n          src={ image }\n          alt={ name }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <div className=\"info\">\n        <div className=\"category-area\">\n          {(type === 'bebida')\n            ? (<p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>)\n            : (\n              <p data-testid={ `${index}-horizontal-top-text` }>\n                { `${area} - ${category}` }\n              </p>\n            )}\n          <Image\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            alt=\"share icon\"\n            onClick={ copyLink }\n          />\n        </div>\n        <Link to={ `/${type}s/${id}` }>\n          <h4 data-testid={ `${index}-horizontal-name` }>{name}</h4>\n        </Link>\n        <p data-testid={ `${index}-horizontal-done-date` }>\n          {`Feita em: ${doneDate}`}\n        </p>\n        { sharedMessage && <p>Link copiado!</p> }\n\n        { tagsTratada\n          ? tagsTratada.map((tag) => (\n            <p\n              key={ index }\n              data-testid={ `${index}-${tag}-horizontal-tag` }\n            >\n              {tag}\n            </p>\n          )) : null}\n      </div>\n    </div>\n  );\n}\n\nDoneCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n    img: PropTypes.string,\n    doneDate: PropTypes.number,\n    name: PropTypes.string,\n    image: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default DoneCard;\n"]},"metadata":{},"sourceType":"module"}