{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/DrinksSearchBar.jsx\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as fetchAPI from '../service/fetchAPI';\nimport DrinksCard from './DrinksCard';\n\nfunction DrinksSearchBar() {\n  const [type, setType] = useState('');\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState([]);\n\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      id,\n      value,\n      name\n    } = target;\n\n    if (name === 'newSearch') {\n      setSearch(value);\n    } else {\n      setType(id);\n    }\n  };\n\n  const warning = () => {\n    if (type === 'firstLetter' && search.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  };\n\n  const handleClick = async () => {\n    warning();\n    const drinks = await fetchAPI.filteredDrinks(type, search);\n    setData(drinks === null ? [] : drinks);\n\n    if (drinks === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n  };\n\n  if (data.length === 1) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/bebidas/${data[0].idDrink}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"newSearch\",\n    \"data-testid\": \"search-input\",\n    type: \"text\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"ingredient\",\n    name: \"filter\",\n    type: \"radio\",\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), \"Ingrediente\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"filter\",\n    type: \"radio\",\n    \"data-testid\": \"name-search-radio\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"firstLetter\",\n    name: \"filter\",\n    type: \"radio\",\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), \"Primeira Letra\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Buscar\"), /*#__PURE__*/React.createElement(DrinksCard, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DrinksSearchBar;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/DrinksSearchBar.jsx"],"names":["React","useState","Redirect","fetchAPI","DrinksCard","DrinksSearchBar","type","setType","search","setSearch","data","setData","handleChange","target","id","value","name","warning","length","alert","handleClick","drinks","filteredDrinks","idDrink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as fetchAPI from '../service/fetchAPI';\nimport DrinksCard from './DrinksCard';\n\nfunction DrinksSearchBar() {\n  const [type, setType] = useState('');\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState([]);\n\n  const handleChange = ({ target }) => {\n    const { id, value, name } = target;\n    if (name === 'newSearch') {\n      setSearch(value);\n    } else {\n      setType(id);\n    }\n  };\n\n  const warning = () => {\n    if (type === 'firstLetter' && search.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  };\n\n  const handleClick = async () => {\n    warning();\n    const drinks = await fetchAPI.filteredDrinks(type, search);\n    setData(drinks === null ? [] : drinks);\n    if (drinks === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n  };\n\n  if (data.length === 1) return <Redirect to={ `/bebidas/${data[0].idDrink}` } />;\n  return (\n    <>\n      <input\n        name=\"newSearch\"\n        data-testid=\"search-input\"\n        type=\"text\"\n        onChange={ handleChange }\n      />\n      <label htmlFor=\"filter\">\n        <input\n          id=\"ingredient\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ handleChange }\n        />\n        Ingrediente\n        <input\n          id=\"name\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          onChange={ handleChange }\n        />\n        Nome\n        <input\n          id=\"firstLetter\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ handleChange }\n        />\n        Primeira Letra\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleClick }\n      >\n        Buscar\n      </button>\n      <DrinksCard data={ data } />\n    </>\n  );\n}\n\nexport default DrinksSearchBar;\n"]},"metadata":{},"sourceType":"module"}