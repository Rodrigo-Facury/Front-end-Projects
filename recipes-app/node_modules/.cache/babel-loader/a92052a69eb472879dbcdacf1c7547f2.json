{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/ComidasEmProgresso.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './ComidasEmProgresso.css';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nconst INITIAL_STORAGE_STATE = {\n  cocktails: {},\n  meals: {}\n};\n\nfunction ComidasEmProgresso(props) {\n  const [recipe, setRecipe] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [completeIngredient, setCompleteIngredient] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const {\n    history: {\n      location: {\n        pathname\n      }\n    }\n  } = props;\n  const id = pathname.split('/')[2];\n  const pathToCopy = `${pathname.split('/')[1]}/${pathname.split('/')[2]}`;\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions\n  } = recipe;\n  useEffect(() => {\n    fetchAPI.fetchRecipeById(id).then(({\n      meals\n    }) => setRecipe(meals[0])).then(() => setIsLoaded(true));\n\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(INITIAL_STORAGE_STATE));\n    }\n\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (savedProgress.meals[id] !== undefined) {\n      setCompleteIngredient([...savedProgress.meals[id]]);\n    }\n  }, [id]);\n  useEffect(() => {\n    const recipeKeys = Object.keys(recipe).filter(item => item.includes('strIngredient'));\n    setIngredients(recipeKeys.map(item => recipe[item]));\n    const measureKeys = Object.keys(recipe).filter(item => item.includes('strMeasure'));\n    setMeasures(measureKeys.map(item => recipe[item]));\n  }, [isLoaded]);\n  useEffect(() => {\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const newProgress = { ...savedProgress,\n      meals: { ...savedProgress.meals,\n        [id]: [...completeIngredient]\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  }, [completeIngredient]);\n\n  const doneIngredient = ({\n    target\n  }, item) => {\n    target.parentNode.classList.toggle('complete');\n\n    if (completeIngredient.includes(item)) {\n      return setCompleteIngredient(completeIngredient.filter(ingredient => ingredient !== item));\n    }\n\n    setCompleteIngredient([...completeIngredient, item]);\n  };\n\n  const checkStorage = ingrediente => {\n    const check = completeIngredient.includes(ingrediente);\n    return check;\n  };\n\n  const displayList = (item, index) => {\n    if (item !== null && item.length > 0) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"ingredient\",\n        \"data-testid\": `${index}-ingredient-step`,\n        className: checkStorage(item) ? 'complete' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, item, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onClick: event => doneIngredient(event, item),\n        defaultChecked: checkStorage(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"instructions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, measures[index]));\n    }\n  };\n\n  const disableButton = () => {\n    const listItem = document.getElementsByTagName('li').length;\n    return listItem !== completeIngredient.length;\n  };\n\n  if (isLoaded) {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"h5\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(ShareButton, {\n      pathname: pathToCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FavoriteButton, {\n      recipe: recipe,\n      id: id,\n      type: \"food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      alt: \"Imagem da receita\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, ingredients.map((item, index) => displayList(item, index))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, strInstructions)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: disableButton(),\n      onClick: () => setShouldRedirect(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Finalizar Receita\"), shouldRedirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/receitas-feitas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 28\n      }\n    }) : null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }\n  }, \"In Progress...\");\n}\n\nComidasEmProgresso.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default ComidasEmProgresso;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/pages/ComidasEmProgresso.js"],"names":["React","useState","useEffect","Redirect","PropTypes","fetchAPI","ShareButton","FavoriteButton","INITIAL_STORAGE_STATE","cocktails","meals","ComidasEmProgresso","props","recipe","setRecipe","isLoaded","setIsLoaded","completeIngredient","setCompleteIngredient","ingredients","setIngredients","measures","setMeasures","shouldRedirect","setShouldRedirect","history","location","pathname","id","split","pathToCopy","strMealThumb","strMeal","strCategory","strInstructions","fetchRecipeById","then","localStorage","getItem","setItem","JSON","stringify","savedProgress","parse","undefined","recipeKeys","Object","keys","filter","item","includes","map","measureKeys","newProgress","doneIngredient","target","parentNode","classList","toggle","ingredient","checkStorage","ingrediente","check","displayList","index","length","event","disableButton","listItem","document","getElementsByTagName","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './ComidasEmProgresso.css';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\n\nconst INITIAL_STORAGE_STATE = { cocktails: {}, meals: {} };\n\nfunction ComidasEmProgresso(props) {\n  const [recipe, setRecipe] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [completeIngredient, setCompleteIngredient] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const { history: { location: { pathname } } } = props;\n  const id = pathname.split('/')[2];\n  const pathToCopy = `${pathname.split('/')[1]}/${pathname.split('/')[2]}`;\n  const { strMealThumb, strMeal, strCategory, strInstructions } = recipe;\n  useEffect(() => {\n    fetchAPI.fetchRecipeById(id)\n      .then(({ meals }) => setRecipe(meals[0]))\n      .then(() => setIsLoaded(true));\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(INITIAL_STORAGE_STATE));\n    }\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (savedProgress.meals[id] !== undefined) {\n      setCompleteIngredient([...savedProgress.meals[id]]);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    const recipeKeys = Object.keys(recipe)\n      .filter((item) => item.includes('strIngredient'));\n    setIngredients(recipeKeys.map((item) => recipe[item]));\n\n    const measureKeys = Object.keys(recipe)\n      .filter((item) => item.includes('strMeasure'));\n    setMeasures(measureKeys.map((item) => recipe[item]));\n  }, [isLoaded]);\n\n  useEffect(() => {\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const newProgress = {\n      ...savedProgress,\n      meals: {\n        ...savedProgress.meals,\n        [id]: [...completeIngredient],\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  }, [completeIngredient]);\n\n  const doneIngredient = ({ target }, item) => {\n    target.parentNode.classList.toggle('complete');\n    if (completeIngredient.includes(item)) {\n      return setCompleteIngredient(completeIngredient\n        .filter((ingredient) => ingredient !== item));\n    }\n    setCompleteIngredient([...completeIngredient, item]);\n  };\n\n  const checkStorage = (ingrediente) => {\n    const check = completeIngredient.includes(ingrediente);\n    return check;\n  };\n\n  const displayList = (item, index) => {\n    if (item !== null && item.length > 0) {\n      return (\n        <li key={ index }>\n          <label\n            htmlFor=\"ingredient\"\n            data-testid={ `${index}-ingredient-step` }\n            className={ checkStorage(item) ? 'complete' : '' }\n          >\n            { item }\n            <input\n              type=\"checkbox\"\n              onClick={ (event) => doneIngredient(event, item) }\n              defaultChecked={ checkStorage(item) }\n            />\n          </label>\n          <p data-testid=\"instructions\">{ measures[index] }</p>\n        </li>\n      );\n    }\n  };\n\n  const disableButton = () => {\n    const listItem = document.getElementsByTagName('li').length;\n    return listItem !== completeIngredient.length;\n  };\n\n  if (isLoaded) {\n    return (\n      <section>\n        <h3 data-testid=\"recipe-title\">\n          { strMeal }\n        </h3>\n        <h5 data-testid=\"recipe-category\">\n          { strCategory }\n        </h5>\n        <ShareButton pathname={ pathToCopy } />\n        <FavoriteButton recipe={ recipe } id={ id } type=\"food\" />\n        <img\n          src={ strMealThumb }\n          alt=\"Imagem da receita\"\n          data-testid=\"recipe-photo\"\n        />\n        <ul>\n          { ingredients.map((item, index) => displayList(item, index)) }\n        </ul>\n        <div>\n          <h4>Instructions</h4>\n          <p>{ strInstructions }</p>\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ disableButton() }\n          onClick={ () => setShouldRedirect(true) }\n        >\n          Finalizar Receita\n        </button>\n        { shouldRedirect ? <Redirect to=\"/receitas-feitas\" /> : null }\n      </section>\n    );\n  }\n\n  return <h1>In Progress...</h1>;\n}\n\nComidasEmProgresso.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default ComidasEmProgresso;\n"]},"metadata":{},"sourceType":"module"}