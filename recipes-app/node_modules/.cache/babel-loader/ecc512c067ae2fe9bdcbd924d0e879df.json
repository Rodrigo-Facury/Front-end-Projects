{"ast":null,"code":"import PropTypes from 'prop-types';\n\nfunction DoneButton({\n  recipe,\n  typeRecipe\n}) {\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strAlcoholic,\n    strMealThumb,\n    strMeal,\n    strArea,\n    idMeal,\n    idDrink,\n    strTags,\n    dateModifield\n  } = recipe;\n  const defaultDoneDrinks = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    tags: strTags,\n    doneDate: dateModifield\n  };\n  const defaultDoneFoods = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    tags: strTags,\n    doneDate: dateModifield\n  };\n  let recipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (recipeStorage === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([]));\n  }\n\n  recipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (typeRecipe === 'bebida') {\n    recipeStorage = [...recipeStorage, defaultDoneDrinks];\n    localStorage.setItem('doneRecipes', JSON.stringify(recipeStorage));\n  } else {\n    recipeStorage = [...recipeStorage, defaultDoneFoods];\n    localStorage.setItem('doneRecipes', JSON.stringify(recipeStorage));\n  }\n}\n\nDoneButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default DoneButton;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/projetos/sd-012-project-recipes-app/src/components/DoneButton.js"],"names":["PropTypes","DoneButton","recipe","typeRecipe","strDrinkThumb","strDrink","strCategory","strAlcoholic","strMealThumb","strMeal","strArea","idMeal","idDrink","strTags","dateModifield","defaultDoneDrinks","id","type","area","category","alcoholicOrNot","name","image","tags","doneDate","defaultDoneFoods","recipeStorage","JSON","parse","localStorage","getItem","setItem","stringify","propTypes","objectOf","string","isRequired"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAApB,EAA4C;AAC1C,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA,OATI;AAUJC,IAAAA,OAVI;AAWJC,IAAAA;AAXI,MAYFZ,MAZJ;AAcA,QAAMa,iBAAiB,GAAG;AACxBC,IAAAA,EAAE,EAAEJ,OADoB;AAExBK,IAAAA,IAAI,EAAE,QAFkB;AAGxBC,IAAAA,IAAI,EAAE,EAHkB;AAIxBC,IAAAA,QAAQ,EAAEb,WAJc;AAKxBc,IAAAA,cAAc,EAAEb,YALQ;AAMxBc,IAAAA,IAAI,EAAEhB,QANkB;AAOxBiB,IAAAA,KAAK,EAAElB,aAPiB;AAQxBmB,IAAAA,IAAI,EAAEV,OARkB;AASxBW,IAAAA,QAAQ,EAAEV;AATc,GAA1B;AAYA,QAAMW,gBAAgB,GAAG;AACvBT,IAAAA,EAAE,EAAEL,MADmB;AAEvBM,IAAAA,IAAI,EAAE,QAFiB;AAGvBC,IAAAA,IAAI,EAAER,OAHiB;AAIvBS,IAAAA,QAAQ,EAAEb,WAJa;AAKvBc,IAAAA,cAAc,EAAE,EALO;AAMvBC,IAAAA,IAAI,EAAEZ,OANiB;AAOvBa,IAAAA,KAAK,EAAEd,YAPgB;AAQvBe,IAAAA,IAAI,EAAEV,OARiB;AASvBW,IAAAA,QAAQ,EAAEV;AATa,GAAzB;AAYA,MAAIY,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;;AACA,MAAIJ,aAAa,KAAK,IAAtB,EAA4B;AAC1BG,IAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCJ,IAAI,CAACK,SAAL,CAAe,EAAf,CAApC;AACD;;AACDN,EAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAhB;;AACA,MAAI3B,UAAU,KAAK,QAAnB,EAA6B;AAC3BuB,IAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBX,iBAAnB,CAAhB;AACAc,IAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCJ,IAAI,CAACK,SAAL,CAAeN,aAAf,CAApC;AACD,GAHD,MAGO;AACLA,IAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBD,gBAAnB,CAAhB;AACAI,IAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCJ,IAAI,CAACK,SAAL,CAAeN,aAAf,CAApC;AACD;AACF;;AAEDzB,UAAU,CAACgC,SAAX,GAAuB;AACrB/B,EAAAA,MAAM,EAAEF,SAAS,CAACkC,QAAV,CAAmBlC,SAAS,CAACmC,MAA7B,EAAqCC,UADxB;AAErBnB,EAAAA,IAAI,EAAEjB,SAAS,CAACmC,MAAV,CAAiBC;AAFF,CAAvB;AAKA,eAAenC,UAAf","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction DoneButton({ recipe, typeRecipe }) {\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strAlcoholic,\n    strMealThumb,\n    strMeal,\n    strArea,\n    idMeal,\n    idDrink,\n    strTags,\n    dateModifield,\n  } = recipe;\n\n  const defaultDoneDrinks = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    tags: strTags,\n    doneDate: dateModifield,\n  };\n\n  const defaultDoneFoods = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    tags: strTags,\n    doneDate: dateModifield,\n  };\n\n  let recipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (recipeStorage === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([]));\n  }\n  recipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (typeRecipe === 'bebida') {\n    recipeStorage = [...recipeStorage, defaultDoneDrinks];\n    localStorage.setItem('doneRecipes', JSON.stringify(recipeStorage));\n  } else {\n    recipeStorage = [...recipeStorage, defaultDoneFoods];\n    localStorage.setItem('doneRecipes', JSON.stringify(recipeStorage));\n  }\n}\n\nDoneButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default DoneButton;\n"]},"metadata":{},"sourceType":"module"}