{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/ComidasEmProgresso.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { Image, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport DoneButton from '../components/DoneButton';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './ComidasEmProgresso.css';\nconst INITIAL_STORAGE_STATE = {\n  cocktails: {},\n  meals: {}\n};\n\nfunction ComidasEmProgresso(props) {\n  const [recipe, setRecipe] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [completeIngredient, setCompleteIngredient] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const {\n    history: {\n      location: {\n        pathname\n      }\n    }\n  } = props;\n  const id = pathname.split('/')[2];\n  const pathToCopy = `${pathname.split('/')[1]}/${pathname.split('/')[2]}`;\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions\n  } = recipe;\n  useEffect(() => {\n    fetchAPI.fetchRecipeById(id).then(({\n      meals\n    }) => setRecipe(meals[0])).then(() => setIsLoaded(true));\n\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(INITIAL_STORAGE_STATE));\n    }\n\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (savedProgress.meals[id] !== undefined) {\n      setCompleteIngredient([...savedProgress.meals[id]]);\n    }\n  }, [id]);\n  useEffect(() => {\n    const recipeKeys = Object.keys(recipe).filter(item => item.includes('strIngredient'));\n    setIngredients(recipeKeys.map(item => recipe[item]));\n    const measureKeys = Object.keys(recipe).filter(item => item.includes('strMeasure'));\n    setMeasures(measureKeys.map(item => recipe[item]));\n  }, [isLoaded]);\n  useEffect(() => {\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const newProgress = { ...savedProgress,\n      meals: { ...savedProgress.meals,\n        [id]: [...completeIngredient]\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  }, [completeIngredient]);\n\n  const doneIngredient = ({\n    target\n  }, item) => {\n    target.parentNode.classList.toggle('complete');\n\n    if (completeIngredient.includes(item)) {\n      return setCompleteIngredient(completeIngredient.filter(ingredient => ingredient !== item));\n    }\n\n    setCompleteIngredient([...completeIngredient, item]);\n  };\n\n  const checkStorage = ingrediente => {\n    const check = completeIngredient.includes(ingrediente);\n    return check;\n  };\n\n  const finaleRecipe = () => {\n    const typeRecipe = 'comida';\n    DoneButton({\n      recipe,\n      typeRecipe\n    });\n    setShouldRedirect(true);\n  };\n\n  const displayList = (item, index) => {\n    if (item !== null && item.length > 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"ingredient\",\n        \"data-testid\": `${index}-ingredient-step`,\n        className: checkStorage(item) ? 'complete' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onClick: event => doneIngredient(event, item),\n        defaultChecked: checkStorage(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), ` ${item}`), /*#__PURE__*/React.createElement(\"span\", {\n        \"data-testid\": \"instructions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, ` - ${measures[index]}`), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  const disableButton = () => {\n    const listItem = document.getElementsByTagName('label').length;\n    return listItem !== completeIngredient.length;\n  };\n\n  if (isLoaded) {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-containe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      fluid: true,\n      src: strMealThumb,\n      alt: \"Imagem da receita\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"favorite-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShareButton, {\n      pathname: pathToCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FavoriteButton, {\n      recipe: recipe,\n      id: id,\n      type: \"food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"h5\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ingredients-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, ingredients.map((item, index) => displayList(item, index))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Instruc\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, strInstructions)), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: disableButton(),\n      onClick: () => finaleRecipe(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \"Finalizar Receita\"), shouldRedirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/receitas-feitas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 28\n      }\n    }) : null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 42\n    }\n  }));\n}\n\nComidasEmProgresso.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default ComidasEmProgresso;","map":{"version":3,"sources":["/home/rodrigo/Music/Trybe/Front-end-Projects/recipes-app/src/pages/ComidasEmProgresso.js"],"names":["React","useState","useEffect","Redirect","Image","Button","PropTypes","ShareButton","FavoriteButton","DoneButton","fetchAPI","INITIAL_STORAGE_STATE","cocktails","meals","ComidasEmProgresso","props","recipe","setRecipe","isLoaded","setIsLoaded","completeIngredient","setCompleteIngredient","ingredients","setIngredients","measures","setMeasures","shouldRedirect","setShouldRedirect","history","location","pathname","id","split","pathToCopy","strMealThumb","strMeal","strCategory","strInstructions","fetchRecipeById","then","localStorage","getItem","setItem","JSON","stringify","savedProgress","parse","undefined","recipeKeys","Object","keys","filter","item","includes","map","measureKeys","newProgress","doneIngredient","target","parentNode","classList","toggle","ingredient","checkStorage","ingrediente","check","finaleRecipe","typeRecipe","displayList","index","length","event","disableButton","listItem","document","getElementsByTagName","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { Image, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport DoneButton from '../components/DoneButton';\nimport * as fetchAPI from '../service/fetchAPI';\nimport './ComidasEmProgresso.css';\n\nconst INITIAL_STORAGE_STATE = { cocktails: {}, meals: {} };\n\nfunction ComidasEmProgresso(props) {\n  const [recipe, setRecipe] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [completeIngredient, setCompleteIngredient] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const { history: { location: { pathname } } } = props;\n  const id = pathname.split('/')[2];\n  const pathToCopy = `${pathname.split('/')[1]}/${pathname.split('/')[2]}`;\n  const { strMealThumb, strMeal, strCategory, strInstructions } = recipe;\n  useEffect(() => {\n    fetchAPI.fetchRecipeById(id)\n      .then(({ meals }) => setRecipe(meals[0]))\n      .then(() => setIsLoaded(true));\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(INITIAL_STORAGE_STATE));\n    }\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (savedProgress.meals[id] !== undefined) {\n      setCompleteIngredient([...savedProgress.meals[id]]);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    const recipeKeys = Object.keys(recipe)\n      .filter((item) => item.includes('strIngredient'));\n    setIngredients(recipeKeys.map((item) => recipe[item]));\n\n    const measureKeys = Object.keys(recipe)\n      .filter((item) => item.includes('strMeasure'));\n    setMeasures(measureKeys.map((item) => recipe[item]));\n  }, [isLoaded]);\n\n  useEffect(() => {\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const newProgress = {\n      ...savedProgress,\n      meals: {\n        ...savedProgress.meals,\n        [id]: [...completeIngredient],\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  }, [completeIngredient]);\n\n  const doneIngredient = ({ target }, item) => {\n    target.parentNode.classList.toggle('complete');\n    if (completeIngredient.includes(item)) {\n      return setCompleteIngredient(completeIngredient\n        .filter((ingredient) => ingredient !== item));\n    }\n    setCompleteIngredient([...completeIngredient, item]);\n  };\n\n  const checkStorage = (ingrediente) => {\n    const check = completeIngredient.includes(ingrediente);\n    return check;\n  };\n\n  const finaleRecipe = () => {\n    const typeRecipe = 'comida';\n    DoneButton({ recipe, typeRecipe });\n    setShouldRedirect(true);\n  };\n\n  const displayList = (item, index) => {\n    if (item !== null && item.length > 0) {\n      return (\n        <span key={ index }>\n          <label\n            htmlFor=\"ingredient\"\n            data-testid={ `${index}-ingredient-step` }\n            className={ checkStorage(item) ? 'complete' : '' }\n          >\n            <input\n              type=\"checkbox\"\n              onClick={ (event) => doneIngredient(event, item) }\n              defaultChecked={ checkStorage(item) }\n            />\n            { ` ${item}` }\n          </label>\n          <span data-testid=\"instructions\">{ ` - ${measures[index]}` }</span>\n          <br />\n        </span>\n      );\n    }\n  };\n\n  const disableButton = () => {\n    const listItem = document.getElementsByTagName('label').length;\n    return listItem !== completeIngredient.length;\n  };\n\n  if (isLoaded) {\n    return (\n      <section className=\"main-containe\">\n        <Image\n          fluid\n          src={ strMealThumb }\n          alt=\"Imagem da receita\"\n          data-testid=\"recipe-photo\"\n        />\n        <div className=\"favorite-container\">\n          <h2 data-testid=\"recipe-title\">\n            { strMeal }\n          </h2>\n          <div className=\"icons\">\n            <ShareButton pathname={ pathToCopy } />\n            <FavoriteButton recipe={ recipe } id={ id } type=\"food\" />\n          </div>\n        </div>\n        <h5 data-testid=\"recipe-category\">\n          { strCategory }\n        </h5>\n        <h4>Ingredientes</h4>\n        <div className=\"ingredients-container\">\n          { ingredients.map((item, index) => displayList(item, index)) }\n        </div>\n        <div>\n          <h4>Instrucões</h4>\n          <p>{ strInstructions }</p>\n        </div>\n        <Button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ disableButton() }\n          onClick={ () => finaleRecipe() }\n        >\n          Finalizar Receita\n        </Button>\n        { shouldRedirect ? <Redirect to=\"/receitas-feitas\" /> : null }\n      </section>\n    );\n  }\n\n  return <div className=\"main-container\"><div className=\"c-loader\" /></div>;\n}\n\nComidasEmProgresso.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default ComidasEmProgresso;\n"]},"metadata":{},"sourceType":"module"}